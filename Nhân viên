#include <iostream>
#include <iomanip>
#include <algorithm>
#include <string>

using namespace std;

class NhanVien {
private:
    int maNhanVien;
    string hoTen;
    int soNhanVien;
    string phongBan;
    float heSoLuong;
    float luong;
    static float mucLuongCoBan;
    static float tongLuongToanCongTy;
	static int soNhanVienToanCongTy;
public:
	// HÃ m tao
	NhanVien() {
        maNhanVien = 0;
        hoTen = "";
        soNhanVien = 0;
        phongBan = "";
        heSoLuong = 0.0;
        luong = 0.0;
    }
	static float layMucLuongCoBan() {
        return mucLuongCoBan;
    }
	static void datMucLuongCoBan(float mucLuong) {
        mucLuongCoBan = mucLuong;
    }
	float layluong(){
			return luong;
	}
	static float layTongLuongToanCongTy() {
        return tongLuongToanCongTy;
    }
	void tinhLuong() {
        luong = heSoLuong * mucLuongCoBan ;
        tongLuongToanCongTy += luong;
        soNhanVienToanCongTy++;
    }
   
	friend istream &operator >> ( istream &is, NhanVien &p){
		
		cout << "Nhap ma nhan vien: ";
        is >> p.maNhanVien;
        is.ignore();
        cout << "Nhap ho ten: ";
        getline(is, p.hoTen);
        cout << "Nhap so nhan vien: ";
        is >> p.soNhanVien;
        is.ignore();
        cout << "Nhap phong ban: ";
        getline(is, p.phongBan);
        cout << "Nhap he so luong: ";
        is >> p.heSoLuong;
        return is;
	}

    
	friend ostream &operator << ( ostream &os, NhanVien p){
		os << "Ma nhan vien: " << p.maNhanVien << endl;
        os << "Ho ten: " << p.hoTen << endl;
        os << "So nhan vien: " << p.soNhanVien << endl;
        os << "Phong ban: " << p.phongBan << endl;
        os << "He so luong: " << p.heSoLuong << endl;
        os << "Muc luong co ban: " << p.mucLuongCoBan << endl;
        os << "Luong: " << p.luong << endl;
        os << "--------------------------------------" << endl;
        return os;
	}
	
	static void inThongTin() {
        cout << "So nhan vien toan cong ty: " << soNhanVienToanCongTy << endl;
        cout << "Tong luong toan cong ty: " << tongLuongToanCongTy << endl;
    }

   
   
	bool operator < ( NhanVien &d){
		return luong < d.luong; 
	}
    NhanVien &operator = (NhanVien &d) {
    	maNhanVien = d.maNhanVien;
	    hoTen = d.hoTen;
	    soNhanVien = d.soNhanVien;
	    phongBan = d.phongBan;
	    heSoLuong = d.heSoLuong;
	    luong = d.luong;	
		mucLuongCoBan = d.mucLuongCoBan ;
   		tongLuongToanCongTy = d.tongLuongToanCongTy;   
    }

};

float NhanVien::mucLuongCoBan = 0;
float NhanVien::tongLuongToanCongTy = 0;
int NhanVien::soNhanVienToanCongTy = 0;

void Sort ( NhanVien a[],int  n){
	for (int i = 0; i < n ; i++){
		for (int j = 0; j < n  ; j++){
			if ( a[i].layluong() < a[j].layluong() ){
	                    NhanVien temp = a[i];
	                    a[i] = a[j];
	                    a[j] = temp;
				}
			}
	}
}

int main() {
    int soLuongNhanVien;
    float mucLuongCoBan;

    cout << "Nhap muc luong co ban: ";
    cin >> mucLuongCoBan;
    NhanVien::datMucLuongCoBan(mucLuongCoBan);

    cout << "Nhap so luong nhan vien: ";
    cin >> soLuongNhanVien;

    NhanVien danhSachNhanVien[10];

   
    for (int i = 0; i < soLuongNhanVien; ++i) {
        cout << "Nhap thong tin nhan vien thu " << i + 1 << ":" << endl;
        cin >> danhSachNhanVien[i];
        danhSachNhanVien[i].tinhLuong();
        
    }


    cout << "Danh sach nhan vien:" << endl << "--------------------------------------" << endl;
    for (int i = 0; i < soLuongNhanVien; ++i) {
        cout << danhSachNhanVien[i];    
    }

    
    
    Sort(danhSachNhanVien,soLuongNhanVien);

    cout << "Danh sach nhan vien sau khi sap xep theo luong tang dan:" << endl << "--------------------------------------" << endl;
     for (int i = 0; i < soLuongNhanVien; ++i) {
        cout << danhSachNhanVien[i];
     }
	NhanVien::inThongTin();
  
}
